################################################################################
# Database quiz
#
# Author: Alastair Hughes
# Contact: <hobbitalastair at yandex dot com>
# Date: 28-10-2015
################################################################################


# Remaining practice topics:
# ER->Relational mapping
# Relational->ER mapping
# Functional dependencies
# Normalization (1NF, 2NF, 3NF, BCNF)
# ACID
# Transaction scheduling
# "grant" SQL review
# Query optimization
# Indexing types
# Query trees


#
# DB definitions:
#

What does a DBMS provide tools for?: 1
    0: Handling user acccess to a database
    1: Definining, constructing, manipulating, and sharing a database
    2: Managing an on-disk data structures
    3: Controlling access to a database

What design phases are there?: 2
    0: Physical, logical, relational
    1: General, specific, user
    2: Requirements specification and analysis, conceptual design, logical design, physical design

What does a "data model" hide?: 1
    0: Implementation details like field length, data types
    1: Storage and implementation details
    2: Relationships and properties of objects

What is a view?: 3
    0: A subset of the data
    1: A generated overview of the data
    2: An ascii-art pictorial representation of the data
    3: Extra data generated from the existing data

What transaction properties are provided by a DBMS?: 0
    0: Isolation and atomicity.
    1: Generality and consistency
    2: Spell checking and reinforcment
    3: Constraint checking


#
# Users
#

# There are several types of users:
# - Database administrators
# - Database designers
# - End users:
#   - Casual end users
#   - Naive or parametric end users
#   - Sophisticated end users
#   - Standalone users
# - System analysts
# - Application programmers
# - Software engineers
# - DBMS designers and implementers
# - DBMS tool developers
# - Operators and maintenance personnel

What is a "naive user"?: 0
    0: Users performing "canned transactions"
    1: Users performing one-off queries using languages such as SQL
    2: Casual home users
    3: DBMS admins

What tasks does a database administrator perform?: 2
    0: Designing a database, and managing it
    1: Designing queries for naive users
    2: Managing hardware and authentication
    3: Creating views and managing access to a database

What tasks does a DBMS tool developer perform?: 1
    0: Designing a database, and managing it
    1: Design applications for interfacing with the database, ie SQLPlus
    2: Create tools that leverage the database for storing data
    3: Creating one-off queries using languages such as SQL


#
# Integrity constraints
#

What does a referential integrity constraint enforce?: 3
    0: Basic rules from the chosen data model
    1: Domain-specific rules like checking that grades are between A and G
    2: That keys are unique in a relationship
    3: That a record in one file must be related to some records in other files
    4: Constraints specified about the data in the language of the data model

What does a uniqueness constraint enforce?: 2
    0: Basic rules from the chosen data model
    1: Domain-specific rules like checking that grades are between A and G
    2: That keys are unique in a relationship
    3: That a record in one file must be related to some records in other files
    4: Constraints specified about the data in the language of the data model

What is a business rule?: 1
    0: Basic rules from the chosen data model
    1: Domain-specific rules like checking that grades are between A and G
    2: That keys are unique in a relationship
    3: That a record in one file must be related to some records in other files
    4: Constraints specified about the data in the language of the data model

What is an inherent rule?: 0
    0: Basic rules from the chosen data model
    1: Domain-specific rules like checking that grades are between A and G
    2: That keys are unique in a relationship
    3: That a record in one file must be related to some records in other files
    4: Constraints specified about the data in the language of the data model

What is a explicit constraint?: 4
    0: Basic rules from the chosen data model
    1: Domain-specific rules like checking that grades are between A and G
    2: That keys are unique in a relationship
    3: That a record in one file must be related to some records in other files
    4: Constraints specified about the data in the language of the data model

#
# More constraints
#

What is a the definition of an invalid state?: 1
    0: A database state which is broken
    1: A database state which does not obey all integrity constraints
    2: A state of an SQL statement which refers to a non-existent object
    3: A state of an SQL statement which contains a syntax error

What is a "transition constraint"?: 1
    0: A state constraint
    1: A constraint on state changes
    2: A constraint on the type of data in the database

What constraints can be violated by an insert operation?: 1
    0: Domain, entity, referential
    1: Domain, key, entity, referential
    2: Domain, key, existiential, referential
    3: Domain, key, referential
    4: Referential, entity

What constraints can be violated by a delete operation?: 4
    0: Entity, referential
    1: Key, entity, referential
    2: Existiential, key
    3: Domain, key
    4: Referential

What constraints can be violated by an update operation?: 1
    0: Domain, entity, referential
    1: Domain, key, entity, referential
    2: Domain, key, existiential, referential
    3: Domain, key, referential
    4: Referential, entity


#
# Database models
#

A conceptual data model is DBMS specific (True/False)?: False
An implementational data model is DBMS specific (True/False)?: True

What data model type is ER?: 1
    0: Implementational
    1: Conceptual
    2: Physical

What is a schema construct?: 2
    0: A constructed schema
    1: A method used to construct a database
    2: A specific part of the description of the database
    3: A type of constraint

What are the levels of the three-schema architecture?: 3
    0: External, conceptual, and implementation
    1: Relational, conceptual, and physical
    2: Relational, generic, and low
    3: External, conceptual, and internal
    4: Physical, implementational, and external

Can the external level contain more than one view (Yes/No)?: Yes

#
# Relation data models
#

Can there be different datatypes in one column in a relation (Yes/No)?: No
Are tuples in a relation ordered (Yes/No)?: Yes
Values in tuples are atomic (True/False).: True
Does a NULL value have several meanings?: 1
    0: Always
    1: Yes, but dependent on context
    2: No (a NULL means NULL!)

Can a given tuple in a relation be intepreted as a predicate (Yes/No)?: Yes

What is a superkey?: 0
    0: A set of attributes that must be unique for all tuples in a relation
    1: A minimal set of attributes that must be unique for all tuples in a relation
    2: The key specified as the main key of a relation
    3: A set of attributes in a relation not part of any key
    4: One possible key

What is a key?: 1
    0: A set of attributes that must be unique for all tuples in a relation
    1: A minimal set of attributes that must be unique for all tuples in a relation
    2: The key specified as the main key of a relation
    3: A set of attributes in a relation not part of any key
    4: One possible key

What is a primary key?: 2
    0: A set of attributes that must be unique for all tuples in a relation
    1: A minimal set of attributes that must be unique for all tuples in a relation
    2: The key specified as the main key of a relation
    3: A set of attributes in a relation not part of any key
    4: One possible key

What is a candidate key?: 4
    0: A set of attributes that must be unique for all tuples in a relation
    1: A minimal set of attributes that must be unique for all tuples in a relation
    2: The key specified as the main key of a relation
    3: A set of attributes in a relation not part of any key
    4: One possible key

Can the value of a given attribute be used to identify all other attributes in a relation if the value of the attribute is defined to be unique for all tuples in a relation (Yes/No)?: Yes


#
# Relational algebra
#

What does the select operation do?: 1
    0: Retrieve a specific column or columns from a relation
    1: Pick out specific tuples based on a given condition
    2: Join two relations together
    3: Perform some operation on a table, ie counting the number of tuples in the table
    4: Rename a table

What does the project operation do?: 0
    0: Retrieve a specific column or columns from a relation
    1: Pick out specific tuples based on a given condition
    2: Join two relations together
    3: Perform some operation on a table, ie counting the number of tuples in the table
    4: Rename a table

What does the cartesian product operation do?: 2
    0: Retrieve a specific column or columns from a relation
    1: Pick out specific tuples based on a given condition
    2: Join two relations together
    3: Perform some operation on a table, ie counting the number of tuples in the table
    4: Rename a table

What do the aggregate functions do?: 2
    0: Retrieve a specific column or columns from a relation
    1: Pick out specific tuples based on a given condition
    2: Join two relations together
    3: Perform some operation on a table, ie counting the number of tuples in the table
    4: Rename a table

What symbol is used for select in relational algebra?: 0
    0: Theta
    1: Pi
    2: Scripted F
    3: Bow tie
    4: Bow tie with open ends, ie '=><='
    5: Kleen star, ie '*'

What symbol is used for project in relational algebra?: 1
    0: Theta
    1: Pi
    2: Scripted F
    3: Bow tie
    4: Bow tie with open ends, ie '=><='
    5: Kleen star, ie '*'

What symbol is used for aggregate functions in relational algebra?: 2
    0: Theta
    1: Pi
    2: Scripted F
    3: Bow tie
    4: Bow tie with open ends, ie '=><='
    5: Kleen star, ie '*'

What symbol is used for join in relational algebra?: 3
    0: Theta
    1: Pi
    2: Scripted F
    3: Bow tie
    4: Bow tie with open ends, ie '=><='
    5: Kleen star, ie '*'

What symbol is used for natural join in relational algebra?: 5
    0: Theta
    1: Pi
    2: Scripted F
    3: Bow tie
    4: Bow tie with open ends, ie '=><='
    5: Kleen star, ie '*'

What does the rho (scripted P) symbol stand for in relational algebra?: 2
    0: Project
    1: Join
    2: Rename
    3: Select

What is the requirements for "union compatiable" relations?: 0
    0: Both relations have the same degree and the attributes are the same
    1: Both relations have the same degree
    2: All the attributes are the same across both relations
    3: The cardinality is the same and the domain of the attributes is the same

What are the join types?: 3
    0: Join, equijoin, natural join (inner and outer variations)
    1: Join, equijoin (inner, left, right, and outer variations)
    2: Equijoin, natural join (inner, left, upside down, right, and outer variations)
    3: Join, equijoin, natural join (inner, left, right, and outer variations)


#
# Cardinality vs degree...
#

What is the cardinality of a table?: 0
    0: The number of tuples
    1: The number of attributes
    2: The number of values (tuples*attributes)

What is the degree of a table?: 1
    0: The number of tuples
    1: The number of attributes
    2: The number of values (tuples*attributes)


#
# ER schema!
#

What symbol is used for an entity?: 1
    0: An oval
    1: A box
    2: A diamond
    3: A line

What symbol is used for an attribute?: 0
    0: An oval
    1: A box
    2: A diamond
    3: A line

What symbol is used for an relationship?: 2
    0: An oval
    1: A box
    2: A diamond
    3: A line

What is used to denote a key?: 1
    0: An dotted oval
    1: An underlined name
    2: A double oval

#TODO: Expand..


#
# Closures
#.

What is the closure of a set of functional dependencies?: 0
    0: The set of all functional dependencies which can be inferred from the given functional dependencies
    1: The minimal set of functional dependencies in the set
    2: The set of attributes that can be inferred from the given functional dependencies
    3: The minimal set of attributes that the functional dependencies determine

What is the closure of a set of attributes?: 3
    0: The set of all functional dependencies which can be inferred from the given attributes
    1: The minimal set of functional dependencies which can be inferred from the given attributes
    2: The set of attributes that can be inferred from the given attributes
    3: The set of attributes that functionally depend on the given attributes

What is a prime attribute?: 1
    0: An attribute belonging to the primary key
    1: An attribute in one of the candidate keys
    2: An attribute not in any of the candidate keys

What is a nonprime attribute?: 2
    0: An attribute belonging to the primary key
    1: An attribute in one of the candidate keys
    2: An attribute not in any of the candidate keys


#
# Normal forms
#

What is the requirements for 1NF?: 0
    0: That all attributes can contain only atomic values
    1: That every nonprime attribute is not partially dependent on any key of R
    2: Given all FD's of the form X->A, either X is a superkey or A is a prime attribute
    3: Given all FD's of the form X->A, X is a superkey of A

What is the requirements for 2NF?: 1
    0: That all attributes can contain only atomic values
    1: That every nonprime attribute is not partially dependent on any key of R
    2: Given all FD's of the form X->A, either X is a superkey or A is a prime attribute
    3: Given all FD's of the form X->A, X is a superkey of A

What is the requirements for 3NF?: 2
    0: That all attributes can contain only atomic values
    1: That every nonprime attribute is not partially dependent on any key of R
    2: Given all FD's of the form X->A, either X is a superkey or A is a prime attribute
    3: Given all FD's of the form X->A, X is a superkey of A

What is the requirements for BCNF?: 3
    0: That all attributes can contain only atomic values
    1: That every nonprime attribute is not partially dependent on any key of R
    2: Given all FD's of the form X->A, either X is a superkey or A is a prime attribute
    3: Given all FD's of the form X->A, X is a superkey of A

What is the definition of "fully functionally dependent"?: 0
    0: If, given a FD X->Y, the removal of any attribute from X means that the FD will no longer hold
    1: If all functional dependencies mention the given FD


#
# Anomalies
#

What are the different types of anomalies?: 0
    0: Update, insertion, deletion
    1: Alien, foriegn, primary
    2: Insertion, foriegn, referential
    3: Primary, foriegn, deletion


